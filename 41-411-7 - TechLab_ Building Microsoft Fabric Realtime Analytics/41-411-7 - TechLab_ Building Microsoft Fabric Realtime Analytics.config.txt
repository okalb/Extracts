

Id                                               : 188046
Number                                           : 41-411-7
Name                                             : TechLab: Building Microsoft Fabric Realtime Analytics
SeriesId                                         : 33146
OrganizationId                                   : 4250
PlatformId                                       : 2
EnableCodeLabFabric                              : False
ParentId                                         : 
ParentName                                       : 
InheritEnvironment                               : False
EnvironmentLabProfileId                          : 
InheritContent                                   : False
ContentLabProfileId                              : 
MinInstanceStorageGb                             : 20
DevelopmentStatusId                              : 10
CurrentDevelopmentStatusId                       : 10
DurationMinutes                                  : 4
DurationUnit                                     : 10
AllowTimeExtensions                              : True
TimeExtensionMinutes                             : 15
TimeExtensionShowNotificationMinutes             : 10
Level                                            : 300
EvaluationId                                     : 
AdvertisingCampaignId                            : 
Description                                      : 
Enabled                                          : True
EnableBugReporting                               : False
BugReportEmailAddress                            : 
OwnerName                                        : 
OwnerEmail                                       : 
OverrideCloudPortalUrl                           : False
CloudPortalUrl                                   : https://portal.azure.com
AppendLabDataToCloudPortalUrl                    : False
NetworksJson                                     : {@{Id=246274; Description=; Name=NAT; PhysicalNetworkAdapterName=; IsStudentVisible=False; DevelopmentOnly=False; Type=10; VLanId=; GatewayAddress=192.168.1.1; SubnetMask=255.255.255.0; EnableDhcp=True; DhcpStart=192.168.1.100; DhcpEnd=192.168.1.200; AddressPrefix=10.0.0.0/24; IsSharedClassNetwork=False; SubnetId=; AccessControlListId=; AccessControlListName=; CustomNetworkId=; CustomNetworkName=; EnableNat=False; EnableEndpoints=False; EndpointGatewayIpAddress=; EndpointGatewaySubnetMask=}}
SharedClassNetworksJson                          : {}
ContainerNetworksJson                            : {}
HasVirtualMachinePool                            : False
VirtualMachinesJson                              : {@{Id=458026; DisplayName=Base23C; ReplacementTokenAlias=Base23C; AutoStart=True; InitialSystemTimeDate=; InitialSystemTimeTime=; WaitForHeartbeat=True; IsHostTimeSyncEnabled=True; IsStudentVisible=True; StartupDelaySeconds=; ResumeOrder=0; ResumeDelaySeconds=; AllowRevert=False; TrackLabInstanceData=True; AllowDesktopConnections=True; AllowSshConnections=False; FloppyMediaId=; DvdMediaId=; TargetResourceGroupId=; CloudOperatingSystemType=0; DiskType=0; UseCloudHybridBenefit=False; PlatformId=2; UseAzureMarketplaceImage=False; Username=Admin; Password=Pa55w.rd; RequiresPremiumCloudFeatures=False; ProfileName=Base23C-W11-23H2 41-411-7; ProfileId=305451; HasDvdDrive=False; HasFloppyDrive=False; NetworkConnections=System.Object[]; Endpoints=System.Object[]}}
VirtualMachinePoolJson                           : {}
VirtualMachinePoolMembersJson                    : {}
DefaultVirtualMachineProfileId                   : 305451
DefaultVirtualMachineLabPoolProfileId            : 
DefaultResourceId                                : 
RemovableMediaJson                               : {}
ContainerImagesJson                              : {}
ContainerVolumesJson                             : {}
CloudResourceGroupsJson                          : {@{Id=23654; DisplayName=CSU_RG; ReplacementTokenAlias=CSU_RG; LabProfileId=188046; EnableDatacenterOverride=False; AccessControlPolicies=System.Object[]; CloudQuotas=System.Object[]; DatacenterOverrideId=; CloudTemplateModels=System.Object[]; TemplateParameterValues=System.Object[]}}
CloudTemplateValuesJson                          : 
CloudDatacenterAvailabilityJson                  : {@{DatacenterId=39; MaxLabInstances=}}
CloudPortalCredentialProfilesJson                : {@{LocalId=1; ResourceGroupPermissionMappings=System.Object[]; SubscriptionPermissionMappings=System.Object[]; AccountNamePrefix=CSU-User; ReplacementTokenAlias=CSU-User}}
CloudSubscriptionInstancePoliciesJson            : {@{Id=3964; Description=Microsoft.ServiceFabric
                                                   Microsoft.Fabric
                                                   Microsoft.Sql/servers/databases
                                                   Microsoft.Resources/deployments
                                                   
                                                   Microsoft.sql/servers locked down by name, location; Enabled=True; IsGlobalPolicy=False; CloudPlatformId=10; Name=41-411-7 RealTimeAnalytics Allow Fabric v3}}
CloudScriptContextPoliciesJson                   : {}
CloudSubscriptionInstanceQuotasJson              : {}
CloudPlatform                                    : 10
CloudPlatformListJson                            : {@{Key=10; Value=Azure}, @{Key=11; Value=AWS}, @{Key=12; Value=GCP}, @{Key=13; Value=Unknown}}
CloudSecurityReviewEventHasOccurred              : False
EnableAutomaticPortalLogin                       : False
DeployDefaultResources                           : False
CloudSubscriptionPoolId                          : 797
CloudSubscriptionPoolName                        : TechMaster MSLEARN - CSS
CloudDeploymentFailureBehavior                   : 10
EnableAzureTAP                                   : False
OverrideScriptContext                            : False
RunScriptAsAdmin                                 : False
ExpectedCloudCost                                : 
InheritPreinstancing                             : False
EnablePreinstancing                              : False
SavePreinstances                                 : True
PreinstanceSaveDelaySeconds                      : 0
PreinstanceBatchSize                             : 1
PreinstanceStockLevel                            : 0
PreinstanceDatacenterStockLevelsJson             : 
EnableCloudCredentialAssignment                  : False
PreinstanceScheduleJson                          : {}
InheritLifeCycleActions                          : False
LifeCycleActionsJson                             : {@{Id=118226; Name=Add user to security group; SortOrder=0; Event=10; ActionType=40; Url=; AppendLabData=False; Synchronous=False; HttpVerb=0; HttpContent=; HttpHeaders=; Timeout=600; Subject=; Notification=; Script=$securityGroups = @("_Skillable-E5")
                                                   
                                                   foreach($secgrp in $securityGroups){
                                                   
                                                   Add-AzADGroupMember -TargetGroupDisplayName $secgrp -MemberUserPrincipalName "@lab.CloudPortalCredential(CSU-User).Username"
                                                   
                                                   }; ScriptDescription=; ScriptGuidance=; ScriptSource=0; ScriptLanguage=0; ScriptTargetId=; ScriptEngineImageId=21; Delay=0; ErrorAction=20; CustomErrorNotification=; Enabled=True; NotificationName=; ScriptEnginePackagesJson=; RepeatScriptUntilTrue=False; RepeatScriptIntervalSeconds=60; RepeatScriptTimeoutMinutes=10; MaxRetries=0; CopilotPromptJson=}, @{Id=118227; Name=Remove user from Security group; SortOrder=0; Event=80; ActionType=40; Url=; AppendLabData=False; Synchronous=True; HttpVerb=0; HttpContent=; HttpHeaders=; Timeout=600; Subject=; Notification=; Script=# Remove user from Azure AD security groups in Skillable lab
                                                   $securityGroups = @("_Skillable-E5")
                                                   $userPrincipalName = "@lab.CloudPortalCredential(CSU-User).Username"
                                                   
                                                   foreach ($secgrp in $securityGroups) {
                                                       try {
                                                           Remove-AzADGroupMember -GroupDisplayName $secgrp -MemberUserPrincipalName $userPrincipalName
                                                           Write-Output "Removed $userPrincipalName from group $secgrp successfully."
                                                       } catch {
                                                           Write-Warning "Failed to remove $userPrincipalName from group $secgrp: $_"
                                                       }
                                                   }
                                                   ; ScriptDescription=; ScriptGuidance=; ScriptSource=0; ScriptLanguage=0; ScriptTargetId=; ScriptEngineImageId=8; Delay=0; ErrorAction=0; CustomErrorNotification=; Enabled=True; NotificationName=; ScriptEnginePackagesJson=; RepeatScriptUntilTrue=False; RepeatScriptIntervalSeconds=60; RepeatScriptTimeoutMinutes=10; MaxRetries=1; CopilotPromptJson=}, @{Id=118228; Name=Register Resource Provider; SortOrder=0; Event=0; ActionType=40; Url=; AppendLabData=False; Synchronous=True; HttpVerb=0; HttpContent=; HttpHeaders=; Timeout=600; Subject=; Notification=; Script=Register-AzResourceProvider -ProviderNamespace 'Microsoft.Compute'
                                                   Start-Sleep -s 30
                                                   
                                                   do{
                                                       $Providers = Get-AzResourceProvider -ProviderNamespace 'Microsoft.Compute'
                                                       Start-Sleep -s 10
                                                   }until($Providers.RegistrationState -eq 'Registered')
                                                   $true; ScriptDescription=; ScriptGuidance=; ScriptSource=0; ScriptLanguage=0; ScriptTargetId=; ScriptEngineImageId=8; Delay=10; ErrorAction=20; CustomErrorNotification=; Enabled=True; NotificationName=; ScriptEnginePackagesJson=; RepeatScriptUntilTrue=True; RepeatScriptIntervalSeconds=60; RepeatScriptTimeoutMinutes=10; MaxRetries=2; CopilotPromptJson=}, @{Id=118230; Name=Deploy sample database; SortOrder=0; Event=20; ActionType=40; Url=; AppendLabData=False; Synchronous=True; HttpVerb=0; HttpContent=; HttpHeaders=; Timeout=240; Subject=; Notification=; Script=$resourceGroupName = 'CSU_RG'
                                                   $templateUri = "https://raw.githubusercontent.com/LODSContent/Tom-Demo/master/template.json"
                                                   $sqlServerName = "sql@lab.LabInstance.Id"
                                                   $maxAttempts = 10
                                                   
                                                   #Register SQL so we can create server
                                                   Register-AzResourceProvider -ProviderNamespace Microsoft.Sql
                                                   
                                                   # Function to check if the SQL server exists
                                                   function Test-SqlServerExists {
                                                       param (
                                                           [string]$resourceGroupName,
                                                           [string]$sqlServerName
                                                       )
                                                       try {
                                                           $server = Get-AzSqlServer -ResourceGroupName $resourceGroupName -ServerName $sqlServerName -ErrorAction Stop
                                                           return $true
                                                       } catch {
                                                           return $false
                                                       }
                                                   }
                                                   
                                                   # Check if the SQL server exists, create if it does not
                                                   if (-not (Test-SqlServerExists -resourceGroupName $resourceGroupName -sqlServerName $sqlServerName)) {
                                                       Write-Output "SQL server '$sqlServerName' not found. Creating new SQL server."
                                                       $location = (Get-AzResourceGroup -Name $resourceGroupName).Location
                                                       $adminUsername = "azureadmin1"
                                                       $adminPassword = ConvertTo-SecureString -String "M+6e!jJ0DaM+6e!jJ0Da" -AsPlainText -Force
                                                       $adminCredentials = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $adminUsername, $adminPassword
                                                       New-AzSqlServer -ResourceGroupName $resourceGroupName -ServerName $sqlServerName -Location $location -ServerVersion "12.0" -SqlAdministratorCredentials $adminCredentials
                                                   } else {
                                                       Write-Output "SQL server '$sqlServerName' exists in resource group '$resourceGroupName'."
                                                   }
                                                   
                                                   $location = (Get-AzResourceGroup -Name $resourceGroupName).Location
                                                   
                                                   $params = @{
                                                       collation = "SQL_Latin1_General_CP1_CI_AS"
                                                       databaseName = "aworks"
                                                       tier = "GeneralPurpose"
                                                       skuName = "GP_S_Gen5_1"
                                                       maxSizeBytes = 34359738368
                                                       sampleName = "AdventureWorksLT"
                                                       serverLocation = $location
                                                       serverName = $sqlServerName
                                                       minCapacity = "0.5"
                                                       autoPauseDelay = 60
                                                       sqlLedgerTemplateLink = "https://sqlazureextension.hosting.portal.azure.net/sqlazureextension/Content/2.1.02687198/DeploymentTemplates/SqlLedger.json"
                                                       privateLinkPrivateDnsZoneFQDN = "privatelink.database.windows.net"
                                                       privateEndpointTemplateLink = "https://sqlazureextension.hosting.portal.azure.net/sqlazureextension/Content/2.1.02687198/DeploymentTemplates/PrivateEndpoint.json"
                                                       privateDnsForPrivateEndpointTemplateLink = "https://sqlazureextension.hosting.portal.azure.net/sqlazureextension/Content/2.1.02687198/DeploymentTemplates/PrivateDnsForPrivateEndpoint.json"
                                                       privateDnsForPrivateEndpointNicTemplateLink = "https://sqlazureextension.hosting.portal.azure.net/sqlazureextension/Content/2.1.02687198/DeploymentTemplates/PrivateDnsForPrivateEndpointNic.json"
                                                       privateDnsForPrivateEndpointIpConfigTemplateLink = "https://sqlazureextension.hosting.portal.azure.net/sqlazureextension/Content/2.1.02687198/DeploymentTemplates/PrivateDnsForPrivateEndpointIpConfig.json"
                                                       requestedBackupStorageRedundancy = "Local"
                                                       freeLimitExhaustionBehavior = "AutoPause"
                                                   }
                                                   
                                                   New-AzResourceGroupDeployment -ResourceGroupName $resourceGroupName -TemplateUri $templateUri -TemplateParameterObject $params
                                                   ; ScriptDescription=; ScriptGuidance=; ScriptSource=0; ScriptLanguage=0; ScriptTargetId=; ScriptEngineImageId=8; Delay=0; ErrorAction=0; CustomErrorNotification=; Enabled=True; NotificationName=; ScriptEnginePackagesJson=; RepeatScriptUntilTrue=False; RepeatScriptIntervalSeconds=60; RepeatScriptTimeoutMinutes=10; MaxRetries=3; CopilotPromptJson=}...}
InheritTags                                      : True
QuickTagsJson                                    : {}
CustomTagsJson                                   : {@{TagValueId=995; HasExpiration=False; ExpiresDate=; ExpiresTime=}, @{TagValueId=1306; HasExpiration=False; ExpiresDate=; ExpiresTime=}}
InheritStorageSettings                           : True
DatacenterAvailability                           : {128, 5, 130, 8}
StorageLoadingPriority                           : 20
LabHostTagsJson                                  : {}
LabFabricBuildSequence                           : 0
ThemeId                                          : 
EnableDisplayDelay                               : False
DisplayDelayValue                                : 
DisplayDelayUnit                                 : 
DisplayDelayMessage                              : 
IntroductionContentUrl                           : 
PreventIntroSkipping                             : False
IntroductionContentMinimumDisplaySeconds         : 30
EndUrl                                           : 
ShowMaxActiveLabInstances                        : False
MaxActiveLabInstances                            : 
MaxAllowedBuildMinutes                           : 60
MaxAllowedBuildTimeAction                        : 10
ShowInstructionsWhileBuilding                    : False
ShowTimer                                        : True
EnableNavigationWarning                          : True
ShowNavigationPane                               : True
NavigationBarWidth                               : 400
UseIntegratedBrowser                             : False
IntegratedBrowserContainerImageId                : 
IntegratedBrowserContainerImageName              : 
ShowContentTab                                   : True
ShowMachinesTab                                  : True
ShowSupportTab                                   : True
UseCustomContentTabLabel                         : False
CustomContentTabLabel                            : 
UseCustomMachinesTabLabel                        : False
CustomMachinesTabLabel                           : 
UseCustomSupportTabLabel                         : False
CustomSupportTabLabel                            : 
EnableCopyPaste                                  : True
ShowVirtualMachinePowerOptions                   : True
EnableInstanceLinkSharing                        : False
AllowLabInstanceNaming                           : False
AllowMultipleActiveInstancesPerUser              : False
EnableScheduledDisablement                       : False
ScheduledDisableDate                             : 
ScheduledDisableTime                             : 
PublishToOrganizationTemplateGallery             : False
TemplateGalleryReuseContainersAndVirtualMachines : False
TemplateGalleryLicenseAgreementId                : 
EnableVirtualMachineInstanceEditing              : False
EnableVncRecordingFeature                        : True
SharedClassEnvironmentRole                       : 0
AutoStartSharedClassEnvironment                  : False
ClassEnvironmentLabProfileId                     : 
AllowCancel                                      : True
AllowSave                                        : False
AllowDisconnect                                  : False
EnableAutoSave                                   : False
EnableLastConsoleSyncTimeout                     : True
LastConsoleSyncTimeoutMinutes                    : 15
EnableLastActivityTimeout                        : True
LastActivityTimeoutMinutes                       : 60
MinimumAutoSaveTimeInvestment                    : 5
MaxSnapshots                                     : 0
ExternalInstruction.Enabled                      : False
LtiOutcomeScoringPolicy                          : 0
LtiOutcomeScoringFormat                          : 0
LtiOutcomePassingScoreMinutes                    : 15
LtiOutcomePassingScoreTaskCompletePercentage     : 70
AllowAnonymousLaunch                             : False
AnonymousLaunchCode                              : 
AnonymousLaunchExpiresChecked                    : False
AnonymousLaunchExpiresDate                       : 
AnonymousLaunchExpiresTime                       : 
AllowAnonymousSave                               : False
AnonymousSaveMaxDays                             : 7
AnonymousSaveMaxSessions                         : 5
AuthenticatedLaunchLinksJson                     : {}
CloudCredentialPoolAssignmentsJson               : {}
ResourcesJson                                    : {}



